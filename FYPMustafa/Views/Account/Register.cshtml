@model FYPMustafa.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<link href="~/Content/main.css" rel="stylesheet" />



@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })

    <div class="page-wrapper bg-red p-t-180 p-b-100 font-robo">
        <div class="wrapper wrapper--w960">
            <div class="card card-2">
                <div class="card-heading"></div>
                <div class="card-body">
                    <h2 class="row-space" style=" margin-top:0px;">Registration Info</h2>
                    <div class="row row-space">
                        <div class="col-2">
                            <div class="input-group">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes =
                                new { @class = "input--style-2",
                                placeholder = @Html.DisplayNameFor(m => m.Email) }})
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-2">
                            <div class="input-group">
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes =
                                new { @class = "input--style-2",
                                placeholder = @Html.DisplayNameFor(m => m.UserName) }})
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row row-space">
                        <div class="col-2">
                            <div class="input-group">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes =
                                new { @class = "input--style-2",
                                placeholder = @Html.DisplayNameFor(m => m.Password) }})
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-2">
                            <div class="input-group">
                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes =
                                new { @class = "input--style-2",
                                placeholder = @Html.DisplayNameFor(m => m.ConfirmPassword) }})
                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row row-space">
                        <div class="col-2">
                            <div class="input-group">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes =
                                new { @class = "input--style-2",
                                placeholder = @Html.DisplayNameFor(m => m.PhoneNumber) }})
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-2">
                            <div class="input-group">
                                @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>{
                                new SelectListItem{ Text="Male", Value="Male"},
                                new SelectListItem{ Text="Female", Value="Female"}
                                }, "--- Select your gender ---", new { @class = "input--style-2 dropd" }
                                )
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row row-space">
                        <div class="col-2">
                            <div class="input-group">
                                @Html.EditorFor(model => model.Street, new { htmlAttributes =
                                new { @class = "input--style-2",
                                placeholder = @Html.DisplayNameFor(m => m.Street) }})
                                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-2">
                            <div class="input-group">
                                @Html.EditorFor(model => model.City, new { htmlAttributes =
                                new { @class = "input--style-2",
                                placeholder = @Html.DisplayNameFor(m => m.City) }})
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="row row-space">
                        <div class="col-2">
                            <div class="input-group">
                                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes =
                                new { @class = "input--style-2",
                                placeholder = @Html.DisplayNameFor(m => m.ZipCode) }})
                                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="row row-space">
                        <button class="btn btn--radius btn--green" type="submit">Create Account</button>
                    </div>
                </div>
            </div>
        </div>
    </div>



}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
